{
  "name": "identity-service",
  "version": "0.1.0",
  "description": "",
  "main": "src/index.js",
  "engines": {
    "node": "~14.0.0"
  },
  "keywords": [],
  "author": "",
  "license": "Apache-2.0",
  "scripts": {
    "start": "nodemon --config nodemon.json src/index.ts | ./node_modules/.bin/bunyan || exit 0",
    "render:email": "rimraf src/notifications/renderEmail && babel src/notifications/components/ -d src/notifications/renderEmail",
    "test": "./scripts/run-tests.sh",
    "test:debug": "./scripts/run-tests.sh -d",
    "coverage": "nyc npm run test",
    "report": "nyc report --reporter=html",
    "lint:fix": "eslint --fix --ext=js,ts src",
    "lint": "eslint --ext=js,ts src",
    "copyfiles": "cp ./src/notifications/browserPush/*.zip ./build/src/notifications/browserPush && cp -r ./src/notifications/browserPush/audius.pushpackage ./build/src/notifications/browserPush && cp -r ./src/notifications/emails ./build/src/notifications",
    "build": "tsc --project tsconfig.build.json && npm run copyfiles",
    "typecheck": "tsc",
    "typecheck:watch": "tsc --watch"
  },
  "dependencies": {
    "@amplitude/node": "^1.9.2",
    "@audius/sdk": "1.0.37",
    "@certusone/wormhole-sdk": "0.1.1",
    "@improbable-eng/grpc-web-node-http-transport": "^0.15.0",
    "@opentelemetry/api": "^1.2.0",
    "@opentelemetry/instrumentation": "^0.31.0",
    "@opentelemetry/instrumentation-bunyan": "^0.29.0",
    "@opentelemetry/instrumentation-express": "^0.30.0",
    "@opentelemetry/instrumentation-http": "^0.31.0",
    "@opentelemetry/resources": "^1.7.0",
    "@opentelemetry/sdk-trace-base": "^1.5.0",
    "@opentelemetry/sdk-trace-node": "^1.5.0",
    "@opentelemetry/semantic-conventions": "^1.5.0",
    "@opentelemetry/tracing": "^0.24.0",
    "@optimizely/optimizely-sdk": "^4.6.0",
    "@sendgrid/mail": "^7.7.0",
    "@sentry/node": "^6.2.5",
    "@sentry/tracing": "^6.2.5",
    "@solana/web3.js": "1.37.1",
    "apn": "^2.2.0",
    "async-retry": "^1.3.3",
    "aws-sdk": "^2.595.0",
    "axios": "^0.19.0",
    "bn.js": "^5.2.1",
    "body-parser": "^1.18.3",
    "borsh": "^0.3.1",
    "bull": "^3.11.0",
    "bunyan": "^1.8.12",
    "convict": "^6.2.3",
    "cookie-parser": "^1.4.5",
    "cors": "^2.8.4",
    "death": "^1.1.0",
    "eth-sig-util": "^2.2.0",
    "ethereumjs-tx": "^1.3.7",
    "ethereumjs-util": "^6.2.1",
    "ethereumjs-wallet": "^0.6.3",
    "express": "^4.16.3",
    "express-rate-limit": "^3.4.0",
    "handlebars": "^4.4.3",
    "hashids": "^2.2.2",
    "hcaptcha": "^0.1.0",
    "ioredis": "^4.9.0",
    "jsonschema": "^1.4.1",
    "keccak256": "^1.0.2",
    "lodash": "^4.17.21",
    "moment": "^2.24.0",
    "moment-timezone": "^0.5.27",
    "multer": "^1.4.0",
    "numeral": "^2.0.6",
    "pg": "^8.0.3",
    "rate-limit-redis": "^1.6.0",
    "react": "^16.11.0",
    "react-dom": "^16.11.0",
    "request": "^2.88.0",
    "secp256k1": "^4.0.2",
    "sequelize": "^4.41.2",
    "shortid": "^2.2.14",
    "ts-node": "^10.9.1",
    "typescript": "^4.8.3",
    "umzug": "^2.2.0",
    "uuid": "^3.3.2",
    "web-push": "^3.4.3",
    "web3": "^1.2.7",
    "web3-eth-accounts": "^1.2.7"
  },
  "devDependencies": {
    "@babel/cli": "^7.7.0",
    "@babel/core": "^7.7.2",
    "@babel/preset-env": "^7.7.1",
    "@babel/preset-react": "^7.7.0",
    "@babel/register": "^7.7.0",
    "@typescript-eslint/eslint-plugin": "^5.5.1",
    "@typescript-eslint/parser": "^5.37.0",
    "babel-preset-react": "^6.24.1",
    "eslint": "^7.32.0",
    "eslint-config-prettier": "^8.3.0",
    "eslint-config-standard": "^16.0.3",
    "eslint-plugin-import": "^2.25.3",
    "eslint-plugin-node": "^11.1.0",
    "eslint-plugin-prettier": "^4.0.0",
    "eslint-plugin-promise": "^5.2.0",
    "mocha": "10.2.0",
    "nock": "^13.2.2",
    "nodemon": "^1.18.10",
    "nyc": "^15.0.0",
    "prettier": "^2.7.1",
    "prettier-config-standard": "^4.0.0",
    "rimraf": "^3.0.0",
    "safari-push-notifications": "^0.4.0",
    "sequelize-cli": "^5.3.0",
    "sinon": "^7.0.0",
    "standard": "^12.0.1",
    "supertest": "^3.3.0"
  },
  "//": {
    "scriptsComments": {
      "coverage": "Runs nyc on tests/ dir and outputs results in ./nyc_output. Can be used for vscode extensions.",
      "report": "Generates static html files representing code coverage per test file and outputs them into /coverage."
    }
  },
  "standard": {
    "globals": [
      "assert",
      "beforeEach",
      "it",
      "before",
      "after",
      "describe",
      "afterEach"
    ],
    "ignore": [
      "src/notifications/components/*",
      "src/notifications/renderEmail/*"
    ]
  }
}
