version: "3.9"

x-logging:
  &default-logging
  options:
    max-size: "50m"
    max-file: "3"
  driver: json-file

services:
  # contracts

  poa-ganache:
    build:
      context: contracts
      dockerfile: Dockerfile.dev
      args:
        bootstrapSPIds: ${BOOTSTRAP_SP_IDS}
        bootstrapSPDelegateWallets: ${BOOTSTRAP_SP_DELEGATE_WALLETS}
        bootstrapSPOwnerWallets: ${BOOTSTRAP_SP_OWNER_WALLETS}
    command: bash /tmp/dev-tools/startup/poa-ganache.sh
    volumes:
      - poa-contracts-abis:/usr/src/app/build/contracts
      - ./dev-tools:/tmp/dev-tools
    ports:
      - "8545:8545"
    logging: *default-logging
    deploy:
      mode: global

  poa-blockscout-db:
    image: postgres:13.6
    environment:
      POSTGRES_PASSWORD: 'postgres'
      POSTGRES_USER: 'postgres'
    healthcheck:
      test: [ "CMD", "pg_isready" ]
      interval: 10s
      timeout: 5s
    logging: *default-logging
    deploy:
      mode: global
    profiles:
      - block-explorer

  poa-blockscout:
    image: blockscout/blockscout:4.1.3
    command: 'mix do ecto.create, ecto.migrate, phx.server'
    environment:
      ETHEREUM_JSONRPC_VARIANT: 'ganache'
      ETHEREUM_JSONRPC_HTTP_URL: 'http://poa-ganache:8545'
      ETHEREUM_JSONRPC_WS_URL: 'ws://poa-ganache:8545'
      INDEXER_DISABLE_PENDING_TRANSACTIONS_FETCHER: 'true'
      DATABASE_URL: 'postgresql://postgres:postgres@poa-blockscout-db:5432/postgres?ssl=false'
      ECTO_USE_SSL: false
    ports:
      - "9545:4000"
    depends_on:
      poa-blockscout-db:
        condition: service_healthy
      poa-ganache:
        condition: service_healthy
    logging: *default-logging
    deploy:
      mode: global
    profiles:
      - block-explorer

  # eth-contracts

  eth-ganache:
    build:
      context: eth-contracts
      dockerfile: Dockerfile.dev
      args:
        CONTENT_NODE_VERSION: ${CONTENT_NODE_VERSION}
        DISCOVERY_NODE_VERSION: ${DISCOVERY_NODE_VERSION}
        antiAbuseOracleAddresses: "${AAO_WALLET_ADDRESSES}"
    command: bash /tmp/dev-tools/startup/eth-ganache.sh
    volumes:
      - eth-contracts-abis:/usr/src/app/build/contracts
      - ./dev-tools:/tmp/dev-tools
    ports:
      - "8546:8545"
    logging: *default-logging
    deploy:
      mode: global

  eth-blockscout-db:
    image: postgres:13.6
    environment:
      POSTGRES_PASSWORD: 'postgres'
      POSTGRES_USER: 'postgres'
    healthcheck:
      test: [ "CMD", "pg_isready" ]
      interval: 10s
      timeout: 5s
    logging: *default-logging
    deploy:
      mode: global
    profiles:
      - block-explorer

  eth-blockscout:
    image: blockscout/blockscout:4.1.3
    command: 'mix do ecto.create, ecto.migrate, phx.server'
    environment:
      ETHEREUM_JSONRPC_VARIANT: 'ganache'
      ETHEREUM_JSONRPC_HTTP_URL: 'http://eth-ganache:8545'
      ETHEREUM_JSONRPC_WS_URL: 'ws://eth-ganache:8545'
      INDEXER_DISABLE_PENDING_TRANSACTIONS_FETCHER: 'true'
      DATABASE_URL: 'postgresql://postgres:postgres@eth-blockscout-db:5432/postgres?ssl=false'
      ECTO_USE_SSL: false
    ports:
      - "9546:4000"
    depends_on:
      eth-blockscout-db:
        condition: service_healthy
      eth-ganache:
        condition: service_healthy
    logging: *default-logging
    deploy:
      mode: global
    profiles:
      - block-explorer

  # solana-programs

  solana-test-validator:
    build:
      context: solana-programs
      dockerfile: Dockerfile.dev
      args:
        AUDIUS_ETH_REGISTRY_PRIVATE_KEY: "${SOLANA_AUDIUS_ETH_REGISTRY_SECRET_KEY}"
        TRACK_LISTEN_COUNT_PRIVATE_KEY: "${SOLANA_TRACK_LISTEN_COUNT_SECRET_KEY}"
        CLAIMABLE_TOKENS_PRIVATE_KEY: "${SOLANA_CLAIMABLE_TOKENS_SECRET_KEY}"
        REWARD_MANAGER_PRIVATE_KEY: "${SOLANA_REWARD_MANAGER_SECRET_KEY}"
        AUDIUS_DATA_PRIVATE_KEY: "${SOLANA_AUDIUS_DATA_SECRET_KEY}"
        owner_private_key: "${SOLANA_OWNER_SECRET_KEY}"
        feepayer_private_key: "${SOLANA_FEEPAYER_SECRET_KEY}"
        token_private_key: "${SOLANA_TOKEN_MINT_SECRET_KEY}"
        admin_authority_private_key: "${SOLANA_ADMIN_AUTHORITY_SECRET_KEY}"
        admin_account_private_key: "${SOLANA_ADMIN_ACCOUNT_SECRET_KEY}"
        signer_group_private_key: "${SOLANA_SIGNER_GROUP_SECRET_KEY}"
        valid_signer_private_key: "${SOLANA_VALID_SIGNER_SECRET_KEY}"
        reward_manager_pda_private_key: "${SOLANA_REWARD_MANAGER_PDA_SECRET_KEY}"
        reward_manager_token_pda_private_key: "${SOLANA_REWARD_MANAGER_TOKEN_PDA_SECRET_KEY}"
        valid_signer_eth_address: "${ETH_VALID_SIGNER_ADDRESS}"
    volumes:
      - solana-programs-idl:/usr/src/app/anchor/audius-data/idl
    ports:
      - "8899:8899"
    logging: *default-logging
    deploy:
      mode: global

  # build libs

  build-audius-libs:
    build: libs
    command: sh /tmp/dev-tools/startup/build-audius-libs.sh
    volumes:
      - audius-libs:/usr/src/app
      - poa-contracts-abis:/usr/src/data-contracts/ABIs
      - eth-contracts-abis:/usr/src/eth-contracts/ABIs
      - ./libs/src:/usr/src/app/src
      - ./dev-tools:/tmp/dev-tools
    depends_on:
      poa-ganache:
        condition: service_started
      eth-ganache:
        condition: service_started
    logging: *default-logging
    deploy:
      mode: global

  # audius-cmd

  audius-cmd:
    build: dev-tools/commands
    command: sleep infinity
    environment:
      ETH_TOKEN_ADDRESS: "${ETH_TOKEN_ADDRESS}"
      ETH_REGISTRY_ADDRESS: "${ETH_REGISTRY_ADDRESS}"
      ETH_PROVIDER_URL: "http://eth-ganache:8545"
      ETH_OWNER_WALLET: "${ETH_OWNER_WALLET}"

      POA_REGISTRY_ADDRESS: "${POA_REGISTRY_ADDRESS}"
      ENTITY_MANAGER_ADDRESS: "${ENTITY_MANAGER_ADDRESS}"
      POA_PROVIDER_URL: "http://poa-ganache:8545"

      SOLANA_ENDPOINT: "http://solana-test-validator:8899"
      SOLANA_OWNER_SECRET_KEY: "${SOLANA_OWNER_SECRET_KEY}"
      SOLANA_TOKEN_MINT_PUBLIC_KEY: "${SOLANA_TOKEN_MINT_PUBLIC_KEY}"
      SOLANA_CLAIMABLE_TOKENS_PUBLIC_KEY: "${SOLANA_CLAIMABLE_TOKENS_PUBLIC_KEY}"
      SOLANA_REWARD_MANAGER_PUBLIC_KEY: "${SOLANA_REWARD_MANAGER_PUBLIC_KEY}"
      SOLANA_REWARD_MANAGER_PDA_PUBLIC_KEY: "${SOLANA_REWARD_MANAGER_PDA_PUBLIC_KEY}"
      SOLANA_REWARD_MANAGER_TOKEN_PDA_PUBLIC_KEY: "${SOLANA_REWARD_MANAGER_TOKEN_PDA_PUBLIC_KEY}"
      SOLANA_FEEPAYER_SECRET_KEY: "${SOLANA_FEEPAYER_SECRET_KEY}"

      IDENTITY_SERVICE_URL: "http://identity-service:7000"
      FALLBACK_CREATOR_NODE_URL: "http://creator-node:4000" # this should choose a random cn everytime this is run
    volumes:
      - audius-libs:/usr/src/app/node_modules/@audius/sdk
      - ./dev-tools/commands/src:/usr/src/app/src
    depends_on:
      build-audius-libs:
        condition: service_started
    logging: *default-logging
    deploy:
      mode: global

  # identity-service

  identity-service-db:
    image: postgres:11.4
    user: postgres
    healthcheck:
      test: [ "CMD", "pg_isready" ]
      interval: 10s
      timeout: 5s
    logging: *default-logging
    deploy:
      mode: global

  identity-service-redis:
    image: redis:7.0
    command: redis-server
    healthcheck:
      test: [ "CMD", "redis-cli", "PING" ]
      interval: 10s
      timeout: 5s
    logging: *default-logging
    deploy:
      mode: global

  identity-service:
    build:
      context: identity-service
      args:
        git_sha: "${GIT_COMMIT}"
    command: scripts/dev-server.sh
    ports:
      - "7000:7000"
      - "9229:9229"
    environment:
      logLevel: debug
      minimumBalance: 1
      minimumRelayerBalance: 1
      minimumFunderBalance: 1

      relayerPrivateKey: "${POA_RELAYER_WALLET_1_PRIVATE_KEY}"
      relayerPublicKey: "${POA_RELAYER_WALLET_1_ADDRESS}"
      relayerWallets: "${POA_RELAYER_WALLETS}"

      ethFunderAddress: "0xaaaa90Fc2bfa70028D6b444BB9754066d9E2703b"
      ethRelayerWallets: "${ETH_RELAYER_WALLETS}"

      userVerifierPrivateKey: "ebba299e6163ff3208de4e82ce7db09cf7e434847b5bdab723af96ae7c763a0e"
      userVerifierPublicKey: "0xbbbb93A6B3A1D6fDd27909729b95CCB0cc9002C0'"

      dbUrl: "postgres://postgres:postgres@identity-service-db:5432/postgres"

      redisHost: "identity-service-redis"
      redisPort: 6379

      aaoEndpoint: "http://anti-abuse-oracle:8000"
      aaoAddress: "${AAO_WALLET_ADDRESS}"

      web3Provider: "http://poa-ganache:8545"
      secondaryWeb3Provider: "http://poa-ganache:8545"
      registryAddress: "${POA_REGISTRY_ADDRESS}"
      entityManagerAddress: "${ENTITY_MANAGER_ADDRESS}"
      ownerWallet: "${POA_OWNER_WALLET}"

      ethProviderUrl: "http://eth-ganache:8545"
      ethTokenAddress: "${ETH_TOKEN_ADDRESS}"
      ethRegistryAddress: "${ETH_REGISTRY_ADDRESS}"
      ethOwnerWallet: "${ETH_OWNER_WALLET}"

      solanaEndpoint: "http://solana-test-validator:8899"
      solanaTrackListenCountAddress: "${SOLANA_TRACK_LISTEN_COUNT_PUBLIC_KEY}"
      solanaAudiusEthRegistryAddress: "${SOLANA_AUDIUS_ETH_REGISTRY_PUBLIC_KEY}"
      solanaValidSigner: "${SOLANA_VALID_SIGNER_PUBLIC_KEY}"
      solanaFeePayerWallets: "[{\"privateKey\":${SOLANA_FEEPAYER_SECRET_KEY}}]"
      solanaSignerPrivateKey: "${ETH_VALID_SIGNER_PRIVATE_KEY}"
      solanaMintAddress: "${SOLANA_TOKEN_MINT_PUBLIC_KEY}"
      solanaClaimableTokenProgramAddress: "${SOLANA_CLAIMABLE_TOKENS_PUBLIC_KEY}"
      solanaRewardsManagerProgramId: "${SOLANA_REWARD_MANAGER_PUBLIC_KEY}"
      solanaRewardsManagerProgramPDA: "${SOLANA_REWARD_MANAGER_PDA_PUBLIC_KEY}"
      solanaRewardsManagerTokenPDA: "${SOLANA_REWARD_MANAGER_TOKEN_PDA_PUBLIC_KEY}"
      solanaAudiusAnchorDataProgramId: "${SOLANA_AUDIUS_DATA_PUBLIC_KEY}"
    volumes:
      - ./identity-service:/usr/src/app
      - ./dev-tools:/tmp/dev-tools
      - audius-libs:/usr/src/audius-libs
    depends_on:
      identity-service-db:
        condition: service_healthy
      identity-service-redis:
        condition: service_healthy
      poa-ganache:
        condition: service_healthy
      eth-ganache:
        condition: service_healthy
      solana-test-validator:
        condition: service_healthy
      build-audius-libs:
        condition: service_started
    logging: *default-logging
    deploy:
      mode: global

  # discovery-provider

  discovery-provider-elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.1.0
    environment:
      discovery.type: single-node
      xpack.security.enabled: false
      ES_JAVA_OPTS: -Xms512m -Xmx512m
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl --fail http://localhost:9200/_cluster/health || exit 1"
        ]
      interval: 10s
      timeout: 5s
      retries: 15
    logging: *default-logging
    deploy:
      mode: replicated
      replicas: "${ELASTICSEARCH_REPLICAS}"
    profiles:
      - elasticsearch

  discovery-provider:
    build:
      context: discovery-provider
      args:
        git_sha: "${GIT_COMMIT}"
    command: sh -c ". /tmp/dev-tools/startup/startup.sh && scripts/start.sh"
    env_file: .env # used by the startup script
    environment:
      PYTHONPYCACHEPREFIX: /tmp/pycache

      audius_web3_host: "poa-ganache"
      audius_web3_port: "8545"
      audius_web3_eth_provider_url: "http://eth-ganache:8545"
      audius_contracts_registry: "${POA_REGISTRY_ADDRESS}"
      audius_contracts_entity_manager_address: "${ENTITY_MANAGER_ADDRESS}"
      audius_eth_contracts_registry: "${ETH_REGISTRY_ADDRESS}"
      audius_eth_contracts_token: "${ETH_TOKEN_ADDRESS}"

      audius_solana_endpoint: "http://solana-test-validator:8899"
      audius_solana_track_listen_count_address: "${SOLANA_TRACK_LISTEN_COUNT_PUBLIC_KEY}"
      audius_solana_signer_group_address: "${SOLANA_SIGNER_GROUP_PUBLIC_KEY}"
      audius_solana_user_bank_program_address: "${SOLANA_CLAIMABLE_TOKENS_PUBLIC_KEY}"
      audius_solana_waudio_mint: "${SOLANA_TOKEN_MINT_PUBLIC_KEY}"
      audius_solana_rewards_manager_program_address: "${SOLANA_REWARD_MANAGER_PUBLIC_KEY}"
      audius_solana_rewards_manager_account: "${SOLANA_REWARD_MANAGER_PDA_PUBLIC_KEY}"
      audius_solana_anchor_data_program_id: "${SOLANA_AUDIUS_DATA_PUBLIC_KEY}"
      audius_solana_anchor_admin_storage_public_key: "${SOLANA_ADMIN_ACCOUNT_PUBLIC_KEY}"

      audius_discprov_dev_mode: "true"
    volumes:
      - ./discovery-provider/alembic:/audius-discovery-provider/alembic
      - ./discovery-provider/solana-tx-parser:/audius-discovery-provider/solana-tx-parser
      - ./discovery-provider/src:/audius-discovery-provider/src
      - poa-contracts-abis:/audius-discovery-provider/build/contracts
      - eth-contracts-abis:/audius-discovery-provider/build/eth-contracts
      - solana-programs-idl:/audius-discovery-provider/idl
      - ./dev-tools:/tmp/dev-tools
    depends_on:
      poa-ganache:
        condition: service_healthy
      eth-ganache:
        condition: service_healthy
      solana-test-validator:
        condition: service_healthy
      discovery-provider-elasticsearch:
        condition: "${ELASTICSEARCH_CONDITION}"
    logging: *default-logging
    deploy:
      mode: replicated
      replicas: "${DISCOVERY_PROVIDER_REPLICAS}"

  # creator-node

  creator-node:
    build:
      context: creator-node
      args:
        git_sha: "${GIT_COMMIT}"
    command: sh -c ". /tmp/dev-tools/startup/startup.sh && scripts/start.sh"
    env_file: .env # used by the startup script
    volumes:
      - ./creator-node/src:/usr/src/app/src
      - audius-libs:/usr/src/audius-libs
      - ./dev-tools:/tmp/dev-tools
    depends_on:
      poa-ganache:
        condition: service_healthy
      eth-ganache:
        condition: service_healthy
      solana-test-validator:
        condition: service_healthy
      build-audius-libs:
        condition: service_started
    logging: *default-logging
    deploy:
      mode: replicated
      replicas: "${CREATOR_NODE_REPLICAS}"

  # port forwarder
  # required for getting consistent port mappings

  port-forwarder:
    image: alpine:3.16.0
    command: sh /tmp/dev-tools/startup/port-forwarder.sh
    ports:
      - "4000-4010:4000-4010"
      - "5000-5010:5000-5010"
    volumes:
      - ./dev-tools:/tmp/dev-tools
    logging: *default-logging
    deploy:
      mode: global

  # SSH server for sshuttle
  # we use separate container instead of host machine for dns/auto-hosts functionality

  sshuttle-server:
    image: linuxserver/openssh-server:latest # don't pin
    command: bash /tmp/dev-tools/startup/sshuttle-server.sh
    environment:
      PUBLIC_KEY_FILE: "/tmp/dev-tools/keys/dev.pub"
      USER_NAME: "sshuttle"
    ports:
      - "2222:2222"
    volumes:
      - ./dev-tools/:/tmp/dev-tools
    logging: *default-logging
    deploy:
      mode: global

volumes:
  poa-contracts-abis:
  eth-contracts-abis:
  solana-programs-idl:
  audius-libs:
