# Do not expose any ports in this file to allow running multiple tests and e2e dev at the same time

version: "3.9"

x-logging:
  &default-logging
  options:
    max-size: "50m"
    max-file: "3"
  driver: json-file

services:
  # TODO: remove duplication between docker-compose.yml and docker-compose.test.yml

  poa-ganache:
    build:
      context: contracts
      dockerfile: Dockerfile.dev
      args:
        bootstrapSPIds: ${BOOTSTRAP_SP_IDS}
        bootstrapSPDelegateWallets: ${BOOTSTRAP_SP_DELEGATE_WALLETS}
        bootstrapSPOwnerWallets: ${BOOTSTRAP_SP_OWNER_WALLETS}
    command: bash /tmp/dev-tools/startup/poa-ganache.sh
    volumes:
      - poa-contracts-abis:/usr/src/app/build/contracts
      - ./dev-tools:/tmp/dev-tools
    logging: *default-logging
    deploy:
      mode: global

  eth-ganache:
    build:
      context: eth-contracts
      dockerfile: Dockerfile.dev
      args:
        CONTENT_NODE_VERSION: ${CONTENT_NODE_VERSION}
        DISCOVERY_NODE_VERSION: ${DISCOVERY_NODE_VERSION}
    command: bash /tmp/dev-tools/startup/eth-ganache.sh
    volumes:
      - eth-contracts-abis:/usr/src/app/build/contracts
      - ./dev-tools:/tmp/dev-tools
    logging: *default-logging
    deploy:
      mode: global

  solana-test-validator:
    build:
      context: solana-programs
      dockerfile: Dockerfile.dev
      args:
        AUDIUS_ETH_REGISTRY_PRIVATE_KEY: "${SOLANA_AUDIUS_ETH_REGISTRY_SECRET_KEY}"
        TRACK_LISTEN_COUNT_PRIVATE_KEY: "${SOLANA_TRACK_LISTEN_COUNT_SECRET_KEY}"
        CLAIMABLE_TOKENS_PRIVATE_KEY: "${SOLANA_CLAIMABLE_TOKENS_SECRET_KEY}"
        REWARD_MANAGER_PRIVATE_KEY: "${SOLANA_REWARD_MANAGER_SECRET_KEY}"
        AUDIUS_DATA_PRIVATE_KEY: "${SOLANA_AUDIUS_DATA_SECRET_KEY}"
        owner_private_key: "${SOLANA_OWNER_SECRET_KEY}"
        feepayer_private_key: "${SOLANA_FEEPAYER_SECRET_KEY}"
        token_private_key: "${SOLANA_TOKEN_MINT_SECRET_KEY}"
        admin_authority_private_key: "${SOLANA_ADMIN_AUTHORITY_SECRET_KEY}"
        admin_account_private_key: "${SOLANA_ADMIN_ACCOUNT_SECRET_KEY}"
        signer_group_private_key: "${SOLANA_SIGNER_GROUP_SECRET_KEY}"
        valid_signer_private_key: "${SOLANA_VALID_SIGNER_SECRET_KEY}"
        reward_manager_pda_private_key: "${SOLANA_REWARD_MANAGER_PDA_SECRET_KEY}"
        reward_manager_token_pda_private_key: "${SOLANA_REWARD_MANAGER_TOKEN_PDA_SECRET_KEY}"
        valid_signer_eth_address: "${ETH_VALID_SIGNER_ADDRESS}"
    volumes:
      - solana-programs-idl:/usr/src/app/anchor/audius-data/idl
    logging: *default-logging
    deploy:
      mode: global

  build-audius-libs:
    extends:
      file: docker-compose.yml
      service: build-audius-libs

  # creator-node

  creator-node-db:
    image: postgres:11.4
    user: postgres
    environment:
      POSTGRES_DB: "creator_node"
    healthcheck:
      test: [ "CMD", "pg_isready" ]
      interval: 10s
      timeout: 5s
    logging: *default-logging
    deploy:
      mode: global

  creator-node-redis:
    image: redis:6.2.7
    healthcheck:
      test: [ "CMD", "redis-cli", "PING" ]
      interval: 10s
      timeout: 5s
    logging: *default-logging
    deploy:
      mode: global
      replicas: 1  # Override default replicas

  test-creator-node:
    extends:
      file: docker-compose.yml
      service: creator-node
    command: "sleep infinity"
    environment:
      storagePath: "./test_file_storage"

      dbUrl: "postgres://postgres:postgres@creator-node-db:5432/creator_node"
      redisHost: "creator-node-redis"
      redisPort: "6379"

      creatorNodeEndpoint: "http://test-creator-node:4000"
      spOwnerWallet: "0x1eC723075E67a1a2B6969dC5CfF0C6793cb36D25"
      delegateOwnerWallet: "0x1eC723075E67a1a2B6969dC5CfF0C6793cb36D25"
      delegatePrivateKey: "0xdb527e4d4a2412a443c17e1666764d3bba43e89e61129a35f9abc337ec170a5d"
    depends_on:
      creator-node-db:
        condition: service_healthy
      creator-node-redis:
        condition: service_healthy
    logging: *default-logging
    deploy:
      mode: global
      # Override default replicas
      replicas: 1
    profiles:
      - tests

  # discovery-provider

  discovery-provider-elasticsearch:
    extends:
      file: docker-compose.yml
      service: discovery-provider-elasticsearch
    deploy:
      mode: global
      replicas: 1  # Override default replicas

  discovery-provider-db:
    image: postgres:11.4
    user: postgres
    environment:
      POSTGRES_DB: "discovery_provider"
    healthcheck:
      test: [ "CMD", "pg_isready" ]
      interval: 10s
      timeout: 5s
    logging: *default-logging
    deploy:
      mode: global

  discovery-provider-redis:
    image: redis:7.0
    healthcheck:
      test: [ "CMD", "redis-cli", "PING" ]
      interval: 10s
      timeout: 5s
    logging: *default-logging
    deploy:
      mode: global

  test-discovery-provider:
    extends:
      file: docker-compose.yml
      service: discovery-provider
    command: sleep infinity
    environment:
      audius_db_url: "postgresql+psycopg2://postgres:postgres@discovery-provider-db:5432/discovery_provider"
      audius_db_url_read_replica: "postgresql+psycopg2://postgres:postgres@discovery-provider-db:5432/discovery_provider"

      audius_redis_url: "redis://discovery-provider-redis:6379/00"

      audius_elasticsearch_url: "http://discovery-provider-elasticsearch:9200"
      audius_elasticsearch_run_indexer: "true"
    volumes:
      - ./discovery-provider:/audius-discovery-provider
    depends_on:
      discovery-provider-elasticsearch:
        condition: service_healthy
      discovery-provider-db:
        condition: service_healthy
      discovery-provider-redis:
        condition: service_healthy
    logging: *default-logging
    deploy:
      mode: global
      replicas: 1  # Override default replicas
    profiles:
      - tests
      - elasticsearch

  # identity-service

  identity-service-db:
    image: postgres:11.4
    user: postgres
    healthcheck:
      test: [ "CMD", "pg_isready" ]
      interval: 10s
      timeout: 5s
    logging: *default-logging
    deploy:
      mode: global

  identity-service-redis:
    image: redis:7.0
    command: redis-server
    healthcheck:
      test: [ "CMD", "redis-cli", "PING" ]
      interval: 10s
      timeout: 5s
    logging: *default-logging
    deploy:
      mode: global

  test-identity-service:
    extends:
      file: docker-compose.yml
      service: identity-service
    command: sleep infinity
    environment:
      isTestRun: "true"
      environment: "test"

volumes:
  poa-contracts-abis:
  eth-contracts-abis:
  solana-programs-idl:
  audius-libs:
